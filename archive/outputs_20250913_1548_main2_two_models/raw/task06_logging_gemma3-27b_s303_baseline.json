{
  "model": "gemma3:27b",
  "arm": "baseline",
  "task_id": "task06_logging",
  "seed": 303,
  "prompt": "Add logging to a web app.",
  "raw": "```python\nimport logging\nimport os\nfrom flask import Flask, request, jsonify\n\n# Configure logging\n# Use environment variables for configuration if available, otherwise use defaults\nLOG_LEVEL = os.environ.get('LOG_LEVEL', 'INFO')  # Default to INFO\nLOG_FILE = os.environ.get('LOG_FILE', 'app.log') # Default to app.log\n\nlogging.basicConfig(\n    level=LOG_LEVEL,\n    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',\n    filename=LOG_FILE,\n    filemode='a'  # Append to the log file\n)\n\nlogger = logging.getLogger(__name__)  # Get a logger for the current module\n\napp = Flask(__name__)\n\n@app.route('/api/data', methods=['GET', 'POST'])\ndef handle_data():\n    \"\"\"\n    Handles GET and POST requests to the /api/data endpoint.\n    Logs the request method, path, and any request data.\n    Returns a JSON response.\n    \"\"\"\n    logger.info(f\"Received {request.method} request to {request.path}\")\n\n    if request.method == 'POST':\n        try:\n            data = request.get_json()\n            logger.debug(f\"Request data: {data}\") # Log the request data at debug level\n            # Process the data (replace with your actual logic)\n            result = {'message': 'Data received and processed', 'data': data}\n            logger.info(f\"Successfully processed request. Result: {result}\")\n            return jsonify(result)\n        except Exception as e:\n            logger.error(f\"Error processing request: {e}\", exc_info=True) # Log the exception with traceback\n            return jsonify({'error': str(e)}), 500\n    else: # GET request\n        logger.warning(\"GET request received.  No data processing performed.\")\n        return jsonify({'message': 'GET request received'})\n\n@app.route('/health')\ndef health_check():\n    \"\"\"\n    A simple health check endpoint.  Logs a message indicating the check.\n    \"\"\"\n    logger.info(\"Health check endpoint accessed.\")\n    return jsonify({'status': 'ok'}), 200\n\n\nif __name__ == '__main__':\n    # Run the app\n    app.run(debug=True) # Set debug=False for production\n```"
}