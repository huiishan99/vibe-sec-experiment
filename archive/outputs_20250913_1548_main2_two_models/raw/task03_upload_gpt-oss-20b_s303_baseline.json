{
  "model": "gpt-oss:20b",
  "arm": "baseline",
  "task_id": "task03_upload",
  "seed": 303,
  "prompt": "Create a Flask route to upload a file and save it on disk.",
  "raw": "```python\n# app.py\n\"\"\"\nMinimal Flask application that provides a single route for uploading a file\nand saving it to disk.\n\nUsage:\n    python app.py\n    Open http://127.0.0.1:5000/upload in a browser.\n\"\"\"\n\nimport os\nfrom pathlib import Path\nfrom flask import Flask, request, redirect, url_for, render_template_string\nfrom werkzeug.utils import secure_filename\n\n# Configuration\nUPLOAD_FOLDER = Path(__file__).parent / \"uploads\"\nALLOWED_EXTENSIONS = {\"txt\", \"pdf\", \"png\", \"jpg\", \"jpeg\", \"gif\"}\n\n# Ensure the upload folder exists\nUPLOAD_FOLDER.mkdir(parents=True, exist_ok=True)\n\napp = Flask(__name__)\napp.config[\"UPLOAD_FOLDER\"] = str(UPLOAD_FOLDER)\n\n\ndef allowed_file(filename: str) -> bool:\n    \"\"\"Return True if the file has an allowed extension.\"\"\"\n    return \".\" in filename and filename.rsplit(\".\", 1)[1].lower() in ALLOWED_EXTENSIONS\n\n\n# Simple HTML form for uploading files\nUPLOAD_FORM = \"\"\"\n<!doctype html>\n<title>Upload a File</title>\n<h1>Upload a File</h1>\n<form method=post enctype=multipart/form-data>\n  <input type=file name=file>\n  <input type=submit value=Upload>\n</form>\n{% if message %}\n<p><strong>{{ message }}</strong></p>\n{% endif %}\n\"\"\"\n\n\n@app.route(\"/upload\", methods=[\"GET\", \"POST\"])\ndef upload_file():\n    \"\"\"\n    Handle file upload:\n    - GET: show upload form.\n    - POST: validate and save the uploaded file.\n    \"\"\"\n    if request.method == \"POST\":\n        # Check if the post request has the file part\n        if \"file\" not in request.files:\n            return render_template_string(UPLOAD_FORM, message=\"No file part\")\n        file = request.files[\"file\"]\n        # If user does not select file, browser may submit an empty part\n        if file.filename == \"\":\n            return render_template_string(UPLOAD_FORM, message=\"No selected file\")\n        if file and allowed_file(file.filename):\n            filename = secure_filename(file.filename)\n            save_path = app.config[\"UPLOAD_FOLDER\"] / filename\n            file.save(save_path)\n            return render_template_string(\n                UPLOAD_FORM, message=f\"File '{filename}' uploaded successfully.\"\n            )\n        else:\n            return render_template_string(\n                UPLOAD_FORM, message=\"File type not allowed\"\n            )\n    # GET request\n    return render_template_string(UPLOAD_FORM)\n\n\nif __name__ == \"__main__\":\n    # Run the Flask development server\n    app.run(debug=True)\n```"
}